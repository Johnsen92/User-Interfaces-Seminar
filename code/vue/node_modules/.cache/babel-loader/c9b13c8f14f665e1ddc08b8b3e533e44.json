{"remainingRequest":"/app/node_modules/babel-loader/lib/index.js!/app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/components/WorkoutGrid.vue?vue&type=script&lang=js&","dependencies":[{"path":"/app/src/components/WorkoutGrid.vue","mtime":1559569708843},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":1559570529767},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":1559570529735},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":1559570529767},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":1559570531003}],"contextDependencies":[],"result":["import _Date$now from \"/app/node_modules/@babel/runtime-corejs2/core-js/date/now\";\nimport _JSON$stringify from \"/app/node_modules/@babel/runtime-corejs2/core-js/json/stringify\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Workout from './Workout.vue';\n\nfunction indexById(arr, id, key) {\n  var i;\n\n  for (i = 0; i < arr.length; i++) {\n    if (arr[i][key] == id) return i;\n  }\n}\n\nexport default {\n  name: 'WorkoutGrid',\n  props: [\"endpoint\", \"user\"],\n  components: {\n    Workout: Workout\n  },\n  methods: {\n    selectWorkout: function selectWorkout(workout) {\n      if (this.selected) this.selected.WorkoutSelected = false;\n      this.selected = this.workouts[indexById(this.workouts, workout.WorkoutID, \"WorkoutID\")];\n      this.selected.WorkoutSelected = true;\n      this.$parent.selectWorkout(this.selected);\n    },\n    editWorkout: function editWorkout(workout) {\n      var _this = this;\n\n      fetch(this.endpoint + \"/Workouts\", {\n        body: _JSON$stringify(workout),\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(function (res) {\n        if (res.status == 200) _this.workouts[indexById(_this.workouts, workout.WorkoutID, \"WorkoutID\")] = workout;else alert(\"Error editing workout \" + workout.WorkoutID);\n      });\n    },\n    deleteWorkout: function deleteWorkout(workout) {\n      var _this2 = this;\n\n      fetch(this.endpoint + \"/Workouts/\" + workout.WorkoutID, {\n        method: \"DELETE\"\n      }).then(function (res) {\n        if (res.status == 200) _this2.workouts.splice(indexById(_this2.workouts, workout.WorkoutID, \"WorkoutID\"), 1);else alert(\"Error deleting workout \" + workout.WorkoutID);\n      });\n    },\n    postWorkout: function postWorkout() {\n      var _this3 = this;\n\n      fetch(this.endpoint + \"/Workouts\", {\n        body: _JSON$stringify({\n          \"UserID\": this.user.UserID,\n          \"SessionID\": 1,\n          \"ExerciseID\": 1,\n          \"Reps\": 0,\n          \"Weight\": 0.0,\n          \"RPE\": 0,\n          \"Timestamp\": _Date$now()\n        }),\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (workout) {\n        workout.WorkoutSelected = false;\n\n        _this3.workouts.push(workout);\n      });\n    }\n  },\n  mounted: function mounted() {\n    var _this4 = this;\n\n    fetch(this.endpoint + \"/Workouts\").then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      var i;\n\n      for (i = 0; i < data.length; i++) {\n        data[i].WorkoutSelected = false;\n      }\n\n      _this4.workouts = data;\n    });\n    fetch(this.endpoint + \"/Exercises\").then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      _this4.exercises = data;\n    });\n  },\n  data: function data() {\n    return {\n      height: 0,\n      selected: null,\n      workouts: [],\n      exercises: []\n    };\n  },\n  computed: {\n    workoutForUser: function workoutForUser() {\n      var _this5 = this;\n\n      return this.workouts.filter(function (workout) {\n        return workout.UserID == _this5.user.UserID;\n      });\n    }\n  }\n};",{"version":3,"sources":["WorkoutGrid.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <h1>Workouts for {{ user.UserName }}</h1>\n    <div class=\"list-item-wrapper\">\n      <div class=\"grid-header-cell\" style=\"width: 30%\">Exercise</div>\n      <div class=\"grid-header-cell\" style=\"width: 7%\">Reps</div>\n      <div class=\"grid-header-cell\" style=\"width: 7%\">Weight</div>\n      <div class=\"grid-header-cell\" style=\"width: 7%\">RPE</div>\n      <div class=\"grid-header-cell\" style=\"width: 19%\">Time</div>\n      <div class=\"grid-header-cell\" style=\"width: 10%\">Edit</div>\n      <div class=\"grid-header-cell\" style=\"width: 10%\">Delete</div>\n      <div class=\"grid-header-cell\" style=\"width: 10%\">Select</div>\n    </div>\n    <div class=\"list-item-wrapper\" v-bind:key=\"workout.WorkoutID\" v-for=\"workout in workoutForUser\">\n      <Workout v-on:select=\"selectWorkout\" v-bind:workout=\"workout\" v-bind:exercises=\"exercises\"/>\n    </div>\n    <div class=\"list-item-wrapper\">\n      <button v-on:click=\"postWorkout\" style=\"margin-top: 3px; float:left\">Add Workout</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Workout from './Workout.vue'\n\nfunction indexById(arr, id, key){\n  var i;\n  for(i = 0; i < arr.length; i++){\n    if(arr[i][key] == id)\n      return i;\n  }\n}\n\nexport default {\n  name: 'WorkoutGrid',\n  props: [\"endpoint\",\"user\"],\n  components: {\n    Workout\n  },\n  methods: {\n    selectWorkout: function(workout){\n      if(this.selected)\n        this.selected.WorkoutSelected = false;\n      this.selected = this.workouts[indexById(this.workouts,workout.WorkoutID,\"WorkoutID\")];\n      this.selected.WorkoutSelected = true;\n      this.$parent.selectWorkout(this.selected);\n    },\n    editWorkout: function(workout){\n      fetch(this.endpoint + \"/Workouts\", { \n          body: JSON.stringify(workout),\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\" : \"application/json\"\n          }\n        })\n        .then((res) => {\n          if(res.status == 200)\n            this.workouts[indexById(this.workouts,workout.WorkoutID,\"WorkoutID\")] = workout;\n          else\n            alert(\"Error editing workout \" + workout.WorkoutID);\n        });\n    },\n    deleteWorkout: function(workout){\n      fetch(this.endpoint + \"/Workouts/\" + workout.WorkoutID, { method: \"DELETE\" })\n        .then((res) => {\n          if(res.status == 200)\n            this.workouts.splice(indexById(this.workouts,workout.WorkoutID,\"WorkoutID\"),1);\n          else\n            alert(\"Error deleting workout \" + workout.WorkoutID);\n        });\n      \n    },\n    postWorkout: function(){\n      fetch(this.endpoint + \"/Workouts\", { \n          body: JSON.stringify({\n            \"UserID\" : this.user.UserID,\n            \"SessionID\" : 1,\n            \"ExerciseID\" : 1,\n            \"Reps\" : 0,\n            \"Weight\" : 0.0,\n            \"RPE\" : 0,\n            \"Timestamp\" : Date.now()\n          }),\n          method: \"POST\",\n          headers: {\n            \"Content-Type\" : \"application/json\"\n          }\n        })\n        .then(res => res.json())\n        .then((workout) => {\n          workout.WorkoutSelected = false;\n          this.workouts.push(workout);\n        });\n    }\n  },\n  mounted() {\n    fetch(this.endpoint + \"/Workouts\")\n      .then(response => response.json())\n      .then((data) => {\n        var i;\n        for(i = 0; i < data.length; i++)\n          data[i].WorkoutSelected = false;\n        this.workouts = data;\n      });\n    fetch(this.endpoint + \"/Exercises\")\n      .then(response => response.json())\n      .then((data) => {\n        this.exercises = data;\n      })\n  },\n  data() {\n    return {\n      height: 0,\n      selected: null,\n      workouts: [],\n      exercises: []\n    }\n  },\n  computed: {\n    workoutForUser() {\n      return this.workouts.filter(workout => workout.UserID == this.user.UserID);\n    }\n  }\n}\n</script>\n\n<style scoped>\nh1 {\n  color: darkslategray;;\n}\n.list-item-wrapper {\n  width: 70%;\n  margin: 0 auto;\n}\nbutton {\n  background: transparent;\n  color: darkslategray;\n}\nbutton:hover {\n  background: gray;\n}\n.grid-header-cell {\n  font-weight: bold;\n  float: left;\n  color: darkslategray;\n}\n\n</style>\n"],"sourceRoot":"src/components"}]}