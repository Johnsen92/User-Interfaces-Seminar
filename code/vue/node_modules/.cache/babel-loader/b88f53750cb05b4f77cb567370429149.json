{"remainingRequest":"/app/node_modules/babel-loader/lib/index.js!/app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/components/UserGrid.vue?vue&type=script&lang=js&","dependencies":[{"path":"/app/src/components/UserGrid.vue","mtime":1555590761014},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _JSON$stringify from \"/app/node_modules/@babel/runtime-corejs2/core-js/json/stringify\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport User from './User.vue';\n\nfunction indexById(arr, id, key) {\n  var i;\n\n  for (i = 0; i < arr.length; i++) {\n    if (arr[i][key] == id) return i;\n  }\n}\n\nexport default {\n  name: 'UserGrid',\n  props: [\"endpoint\"],\n  components: {\n    User: User\n  },\n  methods: {\n    selectUser: function selectUser(user) {\n      if (this.selected) this.selected.UserSelected = false;\n      this.selected = this.users[indexById(this.users, user.UserID, \"UserID\")];\n      this.selected.UserSelected = true;\n      this.$parent.selectUser(this.selected);\n    },\n    editUser: function editUser(user) {\n      var _this = this;\n\n      fetch(this.endpoint + \"/Users\", {\n        body: _JSON$stringify(user),\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(function (res) {\n        if (res.status == 200) _this.users[indexById(_this.users, user.UserID, \"UserID\")] = user;else alert(\"Error editing user \" + user.UserName);\n      });\n    },\n    deleteUser: function deleteUser(user) {\n      var _this2 = this;\n\n      fetch(this.endpoint + \"/Users/\" + user.UserID, {\n        method: \"DELETE\"\n      }).then(function (res) {\n        if (res.status == 200) _this2.users.splice(indexById(_this2.users, user.UserID, \"UserID\"), 1);else alert(\"Error deleting user \" + user.UserName);\n      });\n    },\n    postUser: function postUser() {\n      var _this3 = this;\n\n      fetch(this.endpoint + \"/Users\", {\n        body: _JSON$stringify({\n          \"UserName\": \"default\",\n          \"UserMail\": \"default\",\n          \"UserPassword\": \"default\",\n          \"UserSalt\": \"default\"\n        }),\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (user) {\n        user.UserSelected = false;\n\n        _this3.users.push(user);\n      });\n    }\n  },\n  mounted: function mounted() {\n    var _this4 = this;\n\n    fetch(this.endpoint + \"/Users\").then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      var i;\n\n      for (i = 0; i < data.length; i++) {\n        data[i].UserSelected = false;\n      }\n\n      _this4.users = data;\n    });\n  },\n  data: function data() {\n    return {\n      height: 0,\n      selected: null,\n      users: []\n    };\n  }\n};",{"version":3,"sources":["UserGrid.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <h1>Users</h1>\n    <div class=\"list-item-wrapper\">\n      <div class=\"grid-header-cell\" style=\"width: 30%\">Username</div>\n      <div class=\"grid-header-cell\" style=\"width: 40%\">Email</div>\n      <div class=\"grid-header-cell\" style=\"width: 10%\">Edit</div>\n      <div class=\"grid-header-cell\" style=\"width: 10%\">Delete</div>\n      <div class=\"grid-header-cell\" style=\"width: 10%\">Select</div>\n    </div>\n    <div class=\"list-item-wrapper\" v-bind:key=\"user.UserID\" v-for=\"user in users\">\n      <User v-on:select=\"selectUser\" v-bind:user=\"user\"/>\n    </div>\n    <div class=\"list-item-wrapper\">\n      <button v-on:click=\"postUser\" style=\"margin-top: 3px; float:left\">Add User</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport User from './User.vue'\n\nfunction indexById(arr, id, key){\n  var i;\n  for(i = 0; i < arr.length; i++){\n    if(arr[i][key] == id)\n      return i;\n  }\n}\n\nexport default {\n  name: 'UserGrid',\n  props: [\"endpoint\"],\n  components: {\n    User\n  },\n  methods: {\n    selectUser: function(user){\n      if(this.selected)\n        this.selected.UserSelected = false;\n      this.selected = this.users[indexById(this.users,user.UserID,\"UserID\")];\n      this.selected.UserSelected = true;\n      this.$parent.selectUser(this.selected);\n    },\n    editUser: function(user){\n      fetch(this.endpoint + \"/Users\", { \n          body: JSON.stringify(user),\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\" : \"application/json\"\n          }\n        })\n        .then((res) => {\n          if(res.status == 200)\n            this.users[indexById(this.users,user.UserID,\"UserID\")] = user;\n          else\n            alert(\"Error editing user \" + user.UserName);\n        });\n    },\n    deleteUser: function(user){\n      fetch(this.endpoint + \"/Users/\" + user.UserID, { method: \"DELETE\" })\n        .then((res) => {\n          if(res.status == 200)\n            this.users.splice(indexById(this.users,user.UserID,\"UserID\"),1);\n          else\n            alert(\"Error deleting user \" + user.UserName);\n        });\n      \n    },\n    postUser: function(){\n      fetch(this.endpoint + \"/Users\", { \n          body: JSON.stringify({\n            \"UserName\" : \"default\",\n            \"UserMail\" : \"default\",\n            \"UserPassword\" : \"default\",\n            \"UserSalt\" : \"default\"\n          }),\n          method: \"POST\",\n          headers: {\n            \"Content-Type\" : \"application/json\"\n          }\n        })\n        .then(res => res.json())\n        .then((user) => {\n          user.UserSelected = false;\n          this.users.push(user);\n        });\n    }\n  },\n  mounted() {\n    fetch(this.endpoint + \"/Users\")\n      .then(response => response.json())\n      .then((data) => {\n        var i;\n        for(i = 0; i < data.length; i++)\n          data[i].UserSelected = false;\n        this.users = data;\n      })\n  },\n  data() {\n    return {\n      height: 0,\n      selected: null,\n      users: []\n    }\n  }\n}\n</script>\n\n<style>\nh1 {\n  color: lightgray;;\n}\n.list-item-wrapper {\n  width: 50%;\n  margin: 0 auto;\n}\n.grid-header-cell {\n  font-weight: bold;\n  float: left;\n}\nbutton {\n  background: transparent;\n  color: lightgray;\n  border: none;\n}\nbutton:hover {\n  background: darkslategray;\n}\n\n</style>"],"sourceRoot":"src/components"}]}