{"remainingRequest":"/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/components/UserGrid.vue?vue&type=script&lang=js&","dependencies":[{"path":"/app/src/components/UserGrid.vue","mtime":1555590761014},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport User from './User.vue'\n\nfunction indexById(arr, id, key){\n  var i;\n  for(i = 0; i < arr.length; i++){\n    if(arr[i][key] == id)\n      return i;\n  }\n}\n\nexport default {\n  name: 'UserGrid',\n  props: [\"endpoint\"],\n  components: {\n    User\n  },\n  methods: {\n    selectUser: function(user){\n      if(this.selected)\n        this.selected.UserSelected = false;\n      this.selected = this.users[indexById(this.users,user.UserID,\"UserID\")];\n      this.selected.UserSelected = true;\n      this.$parent.selectUser(this.selected);\n    },\n    editUser: function(user){\n      fetch(this.endpoint + \"/Users\", { \n          body: JSON.stringify(user),\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\" : \"application/json\"\n          }\n        })\n        .then((res) => {\n          if(res.status == 200)\n            this.users[indexById(this.users,user.UserID,\"UserID\")] = user;\n          else\n            alert(\"Error editing user \" + user.UserName);\n        });\n    },\n    deleteUser: function(user){\n      fetch(this.endpoint + \"/Users/\" + user.UserID, { method: \"DELETE\" })\n        .then((res) => {\n          if(res.status == 200)\n            this.users.splice(indexById(this.users,user.UserID,\"UserID\"),1);\n          else\n            alert(\"Error deleting user \" + user.UserName);\n        });\n      \n    },\n    postUser: function(){\n      fetch(this.endpoint + \"/Users\", { \n          body: JSON.stringify({\n            \"UserName\" : \"default\",\n            \"UserMail\" : \"default\",\n            \"UserPassword\" : \"default\",\n            \"UserSalt\" : \"default\"\n          }),\n          method: \"POST\",\n          headers: {\n            \"Content-Type\" : \"application/json\"\n          }\n        })\n        .then(res => res.json())\n        .then((user) => {\n          user.UserSelected = false;\n          this.users.push(user);\n        });\n    }\n  },\n  mounted() {\n    fetch(this.endpoint + \"/Users\")\n      .then(response => response.json())\n      .then((data) => {\n        var i;\n        for(i = 0; i < data.length; i++)\n          data[i].UserSelected = false;\n        this.users = data;\n      })\n  },\n  data() {\n    return {\n      height: 0,\n      selected: null,\n      users: []\n    }\n  }\n}\n",{"version":3,"sources":["UserGrid.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UserGrid.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <h1>Users</h1>\n    <div class=\"list-item-wrapper\">\n      <div class=\"grid-header-cell\" style=\"width: 30%\">Username</div>\n      <div class=\"grid-header-cell\" style=\"width: 40%\">Email</div>\n      <div class=\"grid-header-cell\" style=\"width: 10%\">Edit</div>\n      <div class=\"grid-header-cell\" style=\"width: 10%\">Delete</div>\n      <div class=\"grid-header-cell\" style=\"width: 10%\">Select</div>\n    </div>\n    <div class=\"list-item-wrapper\" v-bind:key=\"user.UserID\" v-for=\"user in users\">\n      <User v-on:select=\"selectUser\" v-bind:user=\"user\"/>\n    </div>\n    <div class=\"list-item-wrapper\">\n      <button v-on:click=\"postUser\" style=\"margin-top: 3px; float:left\">Add User</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport User from './User.vue'\n\nfunction indexById(arr, id, key){\n  var i;\n  for(i = 0; i < arr.length; i++){\n    if(arr[i][key] == id)\n      return i;\n  }\n}\n\nexport default {\n  name: 'UserGrid',\n  props: [\"endpoint\"],\n  components: {\n    User\n  },\n  methods: {\n    selectUser: function(user){\n      if(this.selected)\n        this.selected.UserSelected = false;\n      this.selected = this.users[indexById(this.users,user.UserID,\"UserID\")];\n      this.selected.UserSelected = true;\n      this.$parent.selectUser(this.selected);\n    },\n    editUser: function(user){\n      fetch(this.endpoint + \"/Users\", { \n          body: JSON.stringify(user),\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\" : \"application/json\"\n          }\n        })\n        .then((res) => {\n          if(res.status == 200)\n            this.users[indexById(this.users,user.UserID,\"UserID\")] = user;\n          else\n            alert(\"Error editing user \" + user.UserName);\n        });\n    },\n    deleteUser: function(user){\n      fetch(this.endpoint + \"/Users/\" + user.UserID, { method: \"DELETE\" })\n        .then((res) => {\n          if(res.status == 200)\n            this.users.splice(indexById(this.users,user.UserID,\"UserID\"),1);\n          else\n            alert(\"Error deleting user \" + user.UserName);\n        });\n      \n    },\n    postUser: function(){\n      fetch(this.endpoint + \"/Users\", { \n          body: JSON.stringify({\n            \"UserName\" : \"default\",\n            \"UserMail\" : \"default\",\n            \"UserPassword\" : \"default\",\n            \"UserSalt\" : \"default\"\n          }),\n          method: \"POST\",\n          headers: {\n            \"Content-Type\" : \"application/json\"\n          }\n        })\n        .then(res => res.json())\n        .then((user) => {\n          user.UserSelected = false;\n          this.users.push(user);\n        });\n    }\n  },\n  mounted() {\n    fetch(this.endpoint + \"/Users\")\n      .then(response => response.json())\n      .then((data) => {\n        var i;\n        for(i = 0; i < data.length; i++)\n          data[i].UserSelected = false;\n        this.users = data;\n      })\n  },\n  data() {\n    return {\n      height: 0,\n      selected: null,\n      users: []\n    }\n  }\n}\n</script>\n\n<style>\nh1 {\n  color: lightgray;;\n}\n.list-item-wrapper {\n  width: 50%;\n  margin: 0 auto;\n}\n.grid-header-cell {\n  font-weight: bold;\n  float: left;\n}\nbutton {\n  background: transparent;\n  color: lightgray;\n  border: none;\n}\nbutton:hover {\n  background: darkslategray;\n}\n\n</style>"]}]}