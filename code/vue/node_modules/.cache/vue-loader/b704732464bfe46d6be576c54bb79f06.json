{"remainingRequest":"/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/components/WorkoutGrid.vue?vue&type=style&index=0&id=e2e51ffa&scoped=true&lang=css&","dependencies":[{"path":"/app/src/components/WorkoutGrid.vue","mtime":1555590761018},{"path":"/app/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nh1 {\n  color: darkslategray;;\n}\n.list-item-wrapper {\n  width: 70%;\n  margin: 0 auto;\n}\nbutton {\n  background: transparent;\n  color: darkslategray;\n}\nbutton:hover {\n  background: gray;\n}\n.grid-header-cell {\n  font-weight: bold;\n  float: left;\n  color: darkslategray;\n}\n\n",{"version":3,"sources":["WorkoutGrid.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"WorkoutGrid.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <h1>Workouts for {{ user.UserName }}</h1>\n    <div class=\"list-item-wrapper\">\n      <div class=\"grid-header-cell\" style=\"width: 30%\">Exercise</div>\n      <div class=\"grid-header-cell\" style=\"width: 7%\">Reps</div>\n      <div class=\"grid-header-cell\" style=\"width: 7%\">Weight</div>\n      <div class=\"grid-header-cell\" style=\"width: 7%\">RPE</div>\n      <div class=\"grid-header-cell\" style=\"width: 19%\">Time</div>\n      <div class=\"grid-header-cell\" style=\"width: 10%\">Edit</div>\n      <div class=\"grid-header-cell\" style=\"width: 10%\">Delete</div>\n      <div class=\"grid-header-cell\" style=\"width: 10%\">Select</div>\n    </div>\n    <div class=\"list-item-wrapper\" v-bind:key=\"workout.WorkoutID\" v-for=\"workout in workoutForUser\">\n      <Workout v-on:select=\"selectWorkout\" v-bind:workout=\"workout\" v-bind:exercises=\"exercises\"/>\n    </div>\n    <div class=\"list-item-wrapper\">\n      <button v-on:click=\"postWorkout\" style=\"margin-top: 3px; float:left\">Add Workout</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Workout from './Workout.vue'\n\nfunction indexById(arr, id, key){\n  var i;\n  for(i = 0; i < arr.length; i++){\n    if(arr[i][key] == id)\n      return i;\n  }\n}\n\nexport default {\n  name: 'WorkoutGrid',\n  props: [\"endpoint\",\"user\"],\n  components: {\n    Workout\n  },\n  methods: {\n    selectWorkout: function(workout){\n      if(this.selected)\n        this.selected.WorkoutSelected = false;\n      this.selected = this.workouts[indexById(this.workouts,workout.WorkoutID,\"WorkoutID\")];\n      this.selected.WorkoutSelected = true;\n      this.$parent.selectWorkout(this.selected);\n    },\n    editWorkout: function(workout){\n      fetch(this.endpoint + \"/Workouts\", { \n          body: JSON.stringify(workout),\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\" : \"application/json\"\n          }\n        })\n        .then((res) => {\n          if(res.status == 200)\n            this.workouts[indexById(this.workouts,workout.WorkoutID,\"WorkoutID\")] = workout;\n          else\n            alert(\"Error editing workout \" + workout.WorkoutID);\n        });\n    },\n    deleteWorkout: function(workout){\n      fetch(this.endpoint + \"/Workouts/\" + workout.WorkoutID, { method: \"DELETE\" })\n        .then((res) => {\n          if(res.status == 200)\n            this.workouts.splice(indexById(this.workouts,workout.WorkoutID,\"WorkoutID\"),1);\n          else\n            alert(\"Error deleting workout \" + workout.WorkoutID);\n        });\n      \n    },\n    postWorkout: function(){\n      fetch(this.endpoint + \"/Workouts\", { \n          body: JSON.stringify({\n            \"UserID\" : this.user.UserID,\n            \"SessionID\" : 1,\n            \"ExerciseID\" : 1,\n            \"Reps\" : 0,\n            \"Weight\" : 0.0,\n            \"RPE\" : 0,\n            \"Timestamp\" : Date.now()\n          }),\n          method: \"POST\",\n          headers: {\n            \"Content-Type\" : \"application/json\"\n          }\n        })\n        .then(res => res.json())\n        .then((workout) => {\n          workout.WorkoutSelected = false;\n          console.log(workout);\n          this.workouts.push(workout);\n        });\n    }\n  },\n  mounted() {\n    fetch(this.endpoint + \"/Workouts\")\n      .then(response => response.json())\n      .then((data) => {\n        var i;\n        for(i = 0; i < data.length; i++)\n          data[i].WorkoutSelected = false;\n        this.workouts = data;\n      });\n    fetch(this.endpoint + \"/Exercises\")\n      .then(response => response.json())\n      .then((data) => {\n        this.exercises = data;\n      })\n  },\n  data() {\n    return {\n      height: 0,\n      selected: null,\n      workouts: [],\n      exercises: []\n    }\n  },\n  computed: {\n    workoutForUser() {\n      return this.workouts.filter(workout => workout.UserID == this.user.UserID);\n    }\n  }\n}\n</script>\n\n<style scoped>\nh1 {\n  color: darkslategray;;\n}\n.list-item-wrapper {\n  width: 70%;\n  margin: 0 auto;\n}\nbutton {\n  background: transparent;\n  color: darkslategray;\n}\nbutton:hover {\n  background: gray;\n}\n.grid-header-cell {\n  font-weight: bold;\n  float: left;\n  color: darkslategray;\n}\n\n</style>"]}]}